{"version":3,"sources":["webpack:///./src/component/author.tsx","webpack:///./src/component/blog-post.tsx","webpack:///./src/templates/blog-post.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/component/image/full-name-logo.tsx","webpack:///./src/component/ui/nav-item.tsx","webpack:///./src/component/navbar.tsx","webpack:///./src/component/ui/footer.tsx","webpack:///./src/component/image/letter-logo.tsx","webpack:///./src/component/layout.tsx","webpack:///./src/helper/slug.js","webpack:///./src/component/ui/rounded-img.tsx"],"names":["Author","_ref","email","children","name","Object","core_browser_esm","className","dist_default","a","size","Content","styled_base_browser_esm","target","styles","Cover","RoundedImg","BlogPost","title","html","fluidCover","fluid","alt","dangerouslySetInnerHTML","__html","author_Author","Template","data","file","markdownRemark","frontmatter","url","titleToPath","layout","react_default","Fragment","Helmet","defer","content","meta_description","property","src","gatsby_browser_entry","to","blog_post_BlogPost","get","lib","shortname","config","identifier","titleToSlug","pageQuery","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","FullNameLogo","_4028588191","gatsby_image_default","fixed","childImageSharp","fadeIn","StyledNavItem","BaseNavItem","NavItem","otherProps","_objectWithoutPropertiesLoose","StyledNavbar","BaseNavbar","Navbar","_React$useState","isOpen","setIsOpen","expand","light","id","Container","full_name_logo_FullNameLogo","NavbarToggler","onClick","Collapse","navbar","Nav","nav_item_NavItem","Footer","LetterLogo","_2462350619","Wrapper","Main","Layout","_ref$container","container","_1097489062","site","siteMetadata","lang","navbar_Navbar","Row","Col","md","letter_logo_LetterLogo","gatsby_plugin_google_analytics","href","slugify","replacement","remove","lower","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","BaseImg"],"mappings":"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","file":"component---src-templates-blog-post-tsx-329632e545aedda36100.js","sourcesContent":["import React from \"react\";\nimport Gravatar from \"react-gravatar\";\n\nexport interface AuthorProps {\n  email: string;\n  name: string;\n  children: React.ReactChild;\n}\n\nexport const Author: React.FC<AuthorProps> = ({ email, children, name }) => (\n  <div className=\"media d-flex align-items-center flex-column flex-md-row justify-content-center justify-content-md-start\">\n    <Gravatar\n      email={email}\n      className=\"rounded-circle mb-3 mb-md-0\"\n      size={100}\n    />\n    <div className=\"media-body ml-md-5 text-center text-md-left\">\n      <p className=\"lead\">{name}</p>\n      {children}\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { FluidObject } from \"gatsby-image\";\n\nimport { RoundedImg } from \"./ui/rounded-img\";\nimport styled from \"@emotion/styled\";\nimport { Author } from \"./author\";\n\nconst Content = styled.main`\n  text-align: justify;\n`;\n\nconst Cover = styled(RoundedImg)`\n  float: right;\n  margin-left: 2rem;\n  margin-bottom: 2rem;\n  width: 40vw;\n`;\n\nexport interface BlogPostProps {\n  title: string;\n  fluidCover?: FluidObject;\n  html: string;\n}\n\nexport const BlogPost: React.FC<BlogPostProps> = ({\n  title,\n  html,\n  fluidCover,\n}) => (\n  <article className=\"container\">\n    <header>\n      <h1>{title}</h1>\n    </header>\n    {fluidCover && (\n      <Cover\n        fluid={fluidCover}\n        alt=\"Illustration\"\n        className=\"d-none d-md-block\"\n      />\n    )}\n    <Content dangerouslySetInnerHTML={{ __html: html }} />\n    <footer className=\"mt-5\">\n      <h4>A propos de l'auteur</h4>\n      <Author email=\"robin@lecomtoisduweb.com\" name=\"Robin Bressan\">\n        Passionné de technologies web, je teste de nouvelles technologies\n        régulièrement et fais beaucoup de veille. Entre deux trails, il m'arrive\n        d'écrire de partager mes dernière trouvaille via un article ou Twitter.\n      </Author>\n    </footer>\n  </article>\n);\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport { get } from \"lodash\";\nimport { DiscussionEmbed } from \"disqus-react\";\n\nimport { Layout } from \"../component/layout\";\nimport { BlogPost } from \"../component/blog-post\";\nimport { Helmet } from \"react-helmet\";\nimport { titleToPath, titleToSlug } from \"../helper/slug\";\nimport { FluidObject } from \"gatsby-image\";\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { file, markdownRemark } = data; // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark;\n  const url = `https://lecomtoisduweb.com${titleToPath(frontmatter.title)}`;\n  return (\n    <Layout>\n      <>\n        <Helmet title={frontmatter.title} defer={false}>\n          <meta name=\"description\" content={frontmatter.meta_description} />\n          <meta name=\"og:description\" content={frontmatter.meta_description} />\n          <meta name=\"og:url\" content={url} />\n          <meta name=\"og:title\" content={frontmatter.title} />\n          <meta property=\"og:type\" content=\"article\" />\n          <meta\n            name=\"twitter:description\"\n            content={frontmatter.meta_description}\n          />\n          <meta name=\"twitter:image\" content={(file as FluidObject).src} />\n          <meta name=\"twitter:image\" content={(file as FluidObject).src} />\n        </Helmet>\n        <Link to=\"/blog\" className=\"d-inline-block mb-3\">\n          {\"<\"} Revenir au blog\n        </Link>\n        <BlogPost\n          title={frontmatter.title}\n          fluidCover={get(file, \"childImageSharp.fluid\", null)}\n          html={html}\n        />\n        <div className=\"mt-3\">\n          <DiscussionEmbed\n            shortname=\"lecomtoisduweb\"\n            config={{\n              identifier: titleToSlug(frontmatter.title),\n              title: frontmatter.title,\n              url,\n            }}\n          />\n        </div>\n      </>\n    </Layout>\n  );\n}\nexport const pageQuery = graphql`\n  query($title: String!, $cover: String!) {\n    file(relativePath: { eq: $cover }) {\n      childImageSharp {\n        fluid(maxWidth: 560) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    markdownRemark(frontmatter: { title: { eq: $title } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        cover\n        title\n        meta_description\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nexport const query = graphql`\n  query {\n    file(relativePath: { eq: \"logo-couleur.png\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fixed(height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`;\n\nexport const FullNameLogo: React.FC = () => {\n  const data = useStaticQuery(query);\n  return (\n    <Img\n      fixed={data.file.childImageSharp.fixed}\n      alt=\"Logo le comtois du web\"\n      fadeIn={false}\n    />\n  );\n};\n","import styled from \"@emotion/styled\";\nimport * as React from \"react\";\nimport {\n  NavItem as BaseNavItem,\n  NavItemProps as BaseNavItemProps,\n  NavLink,\n} from \"reactstrap\";\nimport { Link } from \"gatsby\";\n\nexport interface NavItemProps extends BaseNavItemProps {\n  children: React.ReactChild;\n  to: string;\n}\n\nconst StyledNavItem = styled(BaseNavItem)`\n  margin: 0 0.5rem;\n  padding: 0.1rem;\n`;\n\nexport const NavItem: React.FC<NavItemProps> = ({\n  children,\n  to,\n  ...otherProps\n}) => (\n  <StyledNavItem {...otherProps}>\n    <Link to={to}>{children}</Link>\n  </StyledNavItem>\n);\n","import * as React from \"react\";\nimport {\n  Navbar as BaseNavbar,\n  Container,\n  Collapse,\n  Nav,\n  NavbarToggler,\n} from \"reactstrap\";\nimport { Link } from \"gatsby\";\nimport styled from \"@emotion/styled\";\n\nimport { FullNameLogo } from \"./image/full-name-logo\";\nimport { NavItem } from \"./ui/nav-item\";\n\nconst StyledNavbar = styled(BaseNavbar)`\n  padding: 1rem 0;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n\n  & > .navbar-brand {\n    flex: 1;\n  }\n`;\n\nexport const Navbar: React.FC = () => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <StyledNavbar expand=\"lg\" light id=\"navbar\" className=\"px-2 px-sm-0\">\n      <Container className=\"d-flex align-items-center\">\n        <Link className=\"navbar-brand d-flex\" to=\"/\">\n          <FullNameLogo />\n        </Link>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem to=\"/work\">Travail</NavItem>\n            <NavItem to=\"/blog\">Blog</NavItem>\n          </Nav>\n        </Collapse>\n      </Container>\n    </StyledNavbar>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Footer = styled.div`\n  background-color: #131f66;\n  bottom: 0;\n  color: #fff;\n  min-height: 200px;\n  position: absolute;\n  width: 100%;\n\n  & a {\n    border: 0;\n    color: #fff;\n  }\n`;\n","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nexport const query = graphql`\n  query {\n    file(relativePath: { eq: \"logo-lettre-blanc.png\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fixed(height: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`;\n\nexport const LetterLogo: React.FC = () => {\n  const data = useStaticQuery(query);\n  return (\n    <Img\n      fixed={data.file.childImageSharp.fixed}\n      alt=\"Logo le comtois du web\"\n      fadeIn={false}\n    />\n  );\n};\n","import React from \"react\";\nimport { Row, Col, Container } from \"reactstrap\";\nimport styled from \"@emotion/styled\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql, useStaticQuery, Link } from \"gatsby\";\nimport { OutboundLink } from \"gatsby-plugin-google-analytics\";\n\nimport { Navbar } from \"./navbar\";\nimport { Footer } from \"./ui/footer\";\nimport { LetterLogo } from \"./image/letter-logo\";\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  min-height: 100vh;\n`;\n\nconst Main = styled.main`\n  margin-top: 3rem;\n  padding-bottom: calc(200px + 2rem);\n  position: relative;\n`;\n\nexport interface LayoutProps {\n  container?: boolean;\n  children: React.ReactChild;\n}\n\nexport const Layout: React.FC<LayoutProps> = ({\n  children,\n  container = true,\n}) => {\n  const {\n    site: {\n      siteMetadata: { title },\n    },\n  } = useStaticQuery(query);\n\n  return (\n    <Wrapper>\n      <Helmet title={title} defer={false}>\n        <html lang=\"fr\" />\n        <meta\n          name=\"description\"\n          content=\"Concrétisez vos projets d’innovation web et mobile\"\n        />\n        <meta\n          name=\"og:description\"\n          content=\"Concrétisez vos projets d’innovation web et mobile\"\n        />\n        <meta name=\"og:url\" content=\"https://lecomtoisduweb.com\" />\n        <meta name=\"og:title\" content={title} />\n      </Helmet>\n      <header>\n        <Navbar />\n      </header>\n      <Main id=\"main\">\n        {container && <Container>{children}</Container>}\n        {!container && <>{children}</>}\n      </Main>\n      <Footer className=\"footer mt-auto py-5 position-relative position-md-absolute\">\n        <div className=\"container\">\n          <Row>\n            <Col\n              md={2}\n              className=\"d-flex flex-column align-items-center align-items-md-start justify-content-center\"\n            >\n              <Link to=\"/\">\n                <LetterLogo />\n              </Link>\n            </Col>\n            <Col\n              md={4}\n              className=\"d-flex flex-column align-items-center align-items-md-start justify-content-center\"\n            >\n              <p>Robin Bressan</p>\n              <ul className=\"list-unstyled text-center text-md-left\">\n                <li>contact&#64;lecomtoisduweb.com</li>\n              </ul>\n            </Col>\n            <Col md={6}>\n              <ul className=\"h-100 list-unstyled d-flex flex-row align-items-center justify-content-md-end justify-content-center\">\n                <li className=\"mr-3\">\n                  <OutboundLink\n                    href=\"https://www.linkedin.com/in/robin-bressan-99854141\"\n                    target=\"_blank\"\n                  >\n                    LinkedIn\n                  </OutboundLink>\n                </li>\n                <li className=\"mr-3\">\n                  <OutboundLink\n                    href=\"https://www.twitter.com/RobinBressan\"\n                    target=\"_blank\"\n                  >\n                    Twitter\n                  </OutboundLink>\n                </li>\n                <li>\n                  <OutboundLink\n                    href=\"https://github.com/RobinBressan\"\n                    target=\"_blank\"\n                  >\n                    GitHub\n                  </OutboundLink>\n                </li>\n              </ul>\n            </Col>\n          </Row>\n        </div>\n      </Footer>\n    </Wrapper>\n  );\n};\n","const slugify = require(\"slugify\");\n\nfunction titleToPath(title) {\n  return `/blog/${titleToSlug(title)}`;\n}\n\nfunction titleToSlug(title) {\n  return slugify(title, {\n    replacement: \"-\", // replace spaces with replacement\n    remove: /[*+~.,()'\"!:@]/g, // regex to remove characters\n    lower: true, // result in lower case\n  });\n}\n\nmodule.exports = { titleToPath, titleToSlug };\n","import BaseImg from \"gatsby-image\";\nimport styled from \"@emotion/styled\";\n\nexport const RoundedImg = styled(BaseImg)`\n  border-radius: 10px;\n`;\n"],"sourceRoot":""}